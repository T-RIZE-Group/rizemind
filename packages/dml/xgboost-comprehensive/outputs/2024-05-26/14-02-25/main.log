[2024-05-26 14:02:26,441][flwr][INFO] - Starting Flower simulation, config: num_rounds=5, no round_timeout
[2024-05-26 14:02:43,195][flwr][INFO] - Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'memory': 2400043008.0, 'object_store_memory': 1200021504.0, 'node:172.24.1.135': 1.0, 'CPU': 8.0}
[2024-05-26 14:02:43,196][flwr][INFO] - Optimize your simulation with Flower VCE: https://flower.ai/docs/framework/how-to-run-simulations.html
[2024-05-26 14:02:43,197][flwr][INFO] - No `client_resources` specified. Using minimal resources for clients.
[2024-05-26 14:02:43,197][flwr][INFO] - Flower VCE: Resources for each Virtual Client: {'num_cpus': 1, 'num_gpus': 0.0}
[2024-05-26 14:02:43,294][flwr][INFO] - Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
[2024-05-26 14:02:43,295][flwr][INFO] - [INIT]
[2024-05-26 14:02:43,296][flwr][INFO] - Requesting initial parameters from one random client
[2024-05-26 14:03:55,430][flwr][INFO] - Received initial parameters from one random client
[2024-05-26 14:03:55,441][flwr][INFO] - Evaluating initial global parameters
[2024-05-26 14:03:57,144][flwr][ERROR] - Expected 3D (unbatched) or 4D (batched) input to conv2d, but got input of size: [128, 9]
[2024-05-26 14:03:57,795][flwr][ERROR] - Traceback (most recent call last):
  File "/home/iman/projects/kara/Projects/venv/lib/python3.10/site-packages/flwr/simulation/app.py", line 308, in start_simulation
    hist = run_fl(
  File "/home/iman/projects/kara/Projects/venv/lib/python3.10/site-packages/flwr/server/server.py", line 483, in run_fl
    hist, elapsed_time = server.fit(
  File "/home/iman/projects/kara/Projects/venv/lib/python3.10/site-packages/flwr/server/server.py", line 95, in fit
    res = self.strategy.evaluate(0, parameters=self.parameters)
  File "/home/iman/projects/kara/Projects/venv/lib/python3.10/site-packages/flwr/server/strategy/fedavg.py", line 167, in evaluate
    eval_res = self.evaluate_fn(server_round, parameters_ndarrays, {})
  File "/home/iman/projects/kara/Projects/T-Rise/T_rise_kara_server_v2/1-s2.0-S1110016819300316-main.pdf/Flower_FL/server.py", line 57, in evaluate_fn
    loss, accuracy = test(model, testloader, device)
  File "/home/iman/projects/kara/Projects/T-Rise/T_rise_kara_server_v2/1-s2.0-S1110016819300316-main.pdf/Flower_FL/model.py", line 51, in test
    outputs = net(images)
  File "/home/iman/projects/kara/Projects/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/iman/projects/kara/Projects/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/iman/projects/kara/Projects/T-Rise/T_rise_kara_server_v2/1-s2.0-S1110016819300316-main.pdf/Flower_FL/model.py", line 19, in forward
    x = self.pool(F.relu(self.conv1(x)))
  File "/home/iman/projects/kara/Projects/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/iman/projects/kara/Projects/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/iman/projects/kara/Projects/venv/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 460, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/iman/projects/kara/Projects/venv/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 456, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Expected 3D (unbatched) or 4D (batched) input to conv2d, but got input of size: [128, 9]

[2024-05-26 14:03:57,796][flwr][ERROR] - Your simulation crashed :(. This could be because of several reasons. The most common are: 
	 > Sometimes, issues in the simulation code itself can cause crashes. It's always a good idea to double-check your code for any potential bugs or inconsistencies that might be contributing to the problem. For example: 
		 - You might be using a class attribute in your clients that hasn't been defined.
		 - There could be an incorrect method call to a 3rd party library (e.g., PyTorch).
		 - The return types of methods in your clients/strategies might be incorrect.
	 > Your system couldn't fit a single VirtualClient: try lowering `client_resources`.
	 > All the actors in your pool crashed. This could be because: 
		 - You clients hit an out-of-memory (OOM) error and actors couldn't recover from it. Try launching your simulation with more generous `client_resources` setting (i.e. it seems {'num_cpus': 1, 'num_gpus': 0.0} is not enough for your run). Use fewer concurrent actors. 
		 - You were running a multi-node simulation and all worker nodes disconnected. The head node might still be alive but cannot accommodate any actor with resources: {'num_cpus': 1, 'num_gpus': 0.0}.
Take a look at the Flower simulation examples for guidance <https://flower.ai/docs/framework/how-to-run-simulations.html>.
